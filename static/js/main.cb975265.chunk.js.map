{"version":3,"sources":["Scenes/Intro/Button.js","Scenes/Intro/Intro.js","Components/TextInput/Input.js","Scenes/NumItems/NumItems.js","Scenes/Info/Places.js","Scenes/Info/UserInfo.js","Userflow.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","className","onClick","this","props","children","React","Component","val","updateState","_this","addons","offset","speed","style","display","alignItems","justifyContent","flexDirection","Button_Map","handleClick","Input","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","active","locked","value","label","event","target","setState","key","onSubmit","which","predicted","_this2","_this$state","fieldClassName","concat","assign","id","type","placeholder","onChange","changeValue","bind","onKeyPress","handleKeyPress","onFocus","onBlur","setSpace","Input_Input","LocationSearchInput","handleChange","address","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","catch","error","console","dist_default","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","backgroundColor","cursor","description","comingFrom","goingTo","Places_LocationSearchInput","url","name","wrap","arguments","length","undefined","App","updateUser","shipOrDrive","updateLocations","locations","updateSpace","space","ref","parallax","pages","factor","backgroundImage","backgroundSize","Intro_Map","scrollTo","UserInfo_Map","NumItems_Map","pointerEvents","alt","src","width","marginLeft","opacity","ReactDOM","render","Userflow_App","document","getElementById","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb975265.chunk.js","sourcesContent":["import React from 'react'\nimport './intro.css'\n\nexport default class Map extends React.Component {\n\n  render() {\n    return (\n      <div className='button' onClick={this.props.onClick}>\n        <p>{this.props.children}</p>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport Button from './Button'\nimport './intro.css'\nimport { ParallaxLayer } from 'react-spring/addons'\n\nexport default class Map extends React.Component {\n  \n  handleClick(val){\n    this.props.onClick()\n    this.props.updateState(val)\n  }\n\n  render() {\n    return (\n      <ParallaxLayer\n      offset={0}\n      speed={0.1}\n      style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection:'column' }}>\n      <p className=\"title\">Welcome to Distributed Delivery</p>\n        <br/>\n        <br/>\n        <br/>\n        <p>I am...</p>\n        <div className=\"options\">\n          <Button onClick={() => this.handleClick(\"shipping\")}>\n            shipping\n          </Button>\n          \n          <Button onClick={() => this.handleClick(\"driving\")}>\n            driving\n          </Button>\n        </div>\n      \n    </ParallaxLayer>\n    );\n  }\n}","import React from \"react\";\nimport \"./input.css\";\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      value: props.value || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    this.setState({ value });\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.onSubmit()\n    }\n    if (event.which === 13) {\n      this.setState({ value: this.props.predicted });\n    }\n  }\n  onSubmit(){\n    this.props.onSubmit(this.state.value)\n  }\n\n  render() {\n    const { active, value, label } = this.state;\n    const { locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n        <input\n        className={fieldClassName}\n          id={1}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onSubmit={this.onSubmit}\n        \n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n          {...this.props}\n        />\n    );\n  }\n}\n\n","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport Input from '../../Components/TextInput/Input'\n\nexport default class Map extends React.Component {\n    setSpace = (val) => {\n        this.props.onClick()\n        this.props.updateState(val)\n    }\n    \n    render() {\n        return (\n            <ParallaxLayer\n                offset={2}\n                speed={-0}\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                >\n                <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between', flexDirection: 'row' }}>\n                    <p className=\"infoTitle\">\n                        I need a\n                    <Input\n                            id={1}\n                            label=\"small, medium, large\"\n                            predicted=\"small\"\n                            locked={false}\n                            active={false}\n                            onSubmit={this.setSpace}\n                        />\n                        amount of space</p>\n                </div>\n\n            </ParallaxLayer>\n        );\n    }\n}","import React from 'react';\nimport Input from '../../Components/TextInput/Input'\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: ''};\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    this.setState({address})\n\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng =>     this.props.onChange(latLng))\n      .catch(error => console.error('Error', error));\n  };\n\n  render() {\n    \n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <Input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport Geosuggest from './Places'\nimport './info.css'\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comingFrom: null,\n      goingTo: null\n    }\n  };\n\n  comingFrom = (val) => {\n    this.setState({ comingFrom: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n  goingTo = (val) => {\n    this.setState({ goingTo: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    return (\n      <ParallaxLayer\n        offset={1}\n        speed={0.1}\n        // onClick={() => this.props.onClick()}\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm coming from</p>\n          <Geosuggest onChange={this.comingFrom} />\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm going to</p>\n          <Geosuggest onChange={this.goingTo} />\n        </div>\n      </ParallaxLayer>\n    );\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Intro from './Scenes/Intro/Intro'\nimport NumItems from './Scenes/NumItems/NumItems'\nimport UserInfo from './Scenes/Info/UserInfo'\nimport { Parallax, ParallaxLayer } from 'react-spring/addons'\n\n// Little helpers ...\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n// const Pink = ({ children }) => <span style={{ color: '#FF6AC1' }}>{children}</span>\n// const Yellow = ({ children }) => <span style={{ color: '#EFF59B' }}>{children}</span>\n// const Lightblue = ({ children }) => <span style={{ color: '#9AEDFE' }}>{children}</span>\n// const Green = ({ children }) => <span style={{ color: '#57EE89' }}>{children}</span>\n// const Blue = ({ children }) => <span style={{ color: '#57C7FF' }}>{children}</span>\n// const Gray = ({ children }) => <span style={{ color: '#909090' }}>{children}</span>\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shipOrDrive: null,\n            locations: null,\n            space: null\n        }\n    };\n\n    updateUser = (val) => {\n        this.setState({shipOrDrive: val})\n    }\n    updateLocations = (val) => {\n        this.setState({ locations: val })\n    }\n    updateSpace = (val) => {\n        this.setState({ space: val })\n    }\n\n    render() {\n        return (\n\n            <Parallax ref={ref => (this.parallax = ref)} pages={4}>\n                <ParallaxLayer offset={0} speed={0} factor={3} style={{backgroundColor: '#373c4c',backgroundImage: url('stars', true), backgroundSize: 'cover' }} />\n                <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n                <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#909090' }} />\n                <ParallaxLayer offset={3} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n                <Intro onClick={() => this.parallax.scrollTo(1)} updateState={this.updateUser} />\n                <UserInfo onClick={() => this.parallax.scrollTo(2)} updateState={this.updateLocations} />\n                <NumItems onClick={() => this.parallax.scrollTo(3)} updateState={this.updateSpace} />\n\n\n                {/*BACKGROUND IMAGES*/}\n                <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={3} speed={0.4} style={{ opacity: 0.4, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n                </ParallaxLayer>\n                <ParallaxLayer offset={3.8} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('earth')} style={{ width: '60%' }} />\n                </ParallaxLayer>\n\n\n\n\n\n            </Parallax>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserFlow from './Userflow'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<UserFlow />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Scenes/Intro/Button.js","Components/TextInput/Input.js","Scenes/Intro/Intro.js","Scenes/NumItems/NumItems.js","Scenes/Info/Places.js","Scenes/Info/UserInfoDriver.js","Scenes/Info/UserInfoSender.js","Components/DayPickerRange/DayPickerRange.js","Scenes/DateRange/DateRange.js","Userflow.js","serviceWorker.js","Scenes/DriverSuccess/Animation.js","Scenes/DriverSuccess/DriverSuccess.js","Scenes/SenderConfirmation/MapWithADirectionsRenderer.js","Scenes/SenderConfirmation/SenderAnimation.js","Scenes/SenderConfirmation/SenderConfirmation.js","index.js"],"names":["Map","_this","this","react_default","a","createElement","web","from","opacity","to","friction","props","className","onClick","style","children","React","Component","Input","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","active","locked","value","label","event","target","onKeyChange","setState","key","onSubmit","_this2","_this$state","fieldClassName","concat","assign","id","type","placeholder","onChange","changeValue","bind","onKeyPress","handleKeyPress","onFocus","onBlur","getVal","val","name","updateState","addons","offset","speed","display","alignItems","justifyContent","flexDirection","flexWrap","Input_Input","Button_Map","handleClick","setSpace","sender","LocationSearchInput","handleChange","address","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","catch","error","console","dist_default","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","backgroundColor","cursor","description","comingFrom","goingTo","Places_LocationSearchInput","Example","handleFromChange","assertThisInitialized","handleToChange","undefined","moment","diff","getDayPicker","showMonth","returnDate","showFromMonth","_this$state2","modifiers","start","end","DayPickerInput_default","format","formatDate","parseDate","dayPickerProps","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","onDayChange","ref","el","before","month","fromMonth","Helmet_default","returnDateRange","DayPickerRange_Example","marginLeft","date","Date","url","wrap","arguments","length","UserFlow","updateUser","sendOrDrive","updateLocations","locations","updateSpace","space","updateTimeFrame","timeFrame","returnEverything","onFinished","JSON","stringify","parallax","pages","factor","backgroundImage","backgroundSize","Intro_Map","scrollTo","UserInfoSender_Map","UserInfoDriver_Map","NumItems_Map","pointerEvents","alt","src","width","DateRange_Map","Boolean","window","location","hostname","match","LottieControl","defaultOptions","autoplay","animationData","rendererSettings","preserveAspectRatio","react_lottie_dist_default","options","height","PureComponent","DriverSuccess","flex","Animation_LottieControl","MapWithADirectionsRenderer","MyMapComponent","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","direction","markers","coordinates","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","position","log","paddingTop","paddingBottom","paddingLeft","paddingRight","driver","price","SenderAnimation_LottieControl","MapWithADirectionsRenderer_MapWithADirectionsRenderer","App","changeFlow","finishedForm","addSender","handleForm","SenderConfirmation_Map","DriverSuccess_DriverSuccess","Userflow_UserFlow","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39606567.chunk.js","sourcesContent":["import React from 'react'\nimport { Spring } from 'react-spring'\nimport './intro.css'\n\nexport default class Map extends React.Component {\n\n  render() {\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        friction={10}>\n        {props => <div className='button' onClick={this.props.onClick} style={props}>\n        <p>{this.props.children}</p>\n      </div>}\n      </Spring>\n      \n    );\n  }\n}","import React from \"react\";\nimport \"./input.css\";\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: (props.locked && props.active) || false,\n      value: props.value || \"\",\n      label: props.label || \"Label\"\n    };\n  }\n\n  changeValue(event) {\n    const value = event.target.value;\n    if(this.props.onKeyChange){\n      this.props.onKeyChange(value)\n    }  \n    this.setState({ value });\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.setState({value: \"\"})\n      this.onSubmit()\n    }\n  }\n  onSubmit(){\n    if(this.props.onSubmit){\n      this.props.onSubmit(this.state.value)\n    }\n  }\n\n  render() {\n    const { active, value, label } = this.state;\n    const { locked } = this.props;\n    const fieldClassName = `field ${(locked ? active : active || value) &&\n      \"active\"} ${locked && !active && \"locked\"}`;\n\n    return (\n        <input\n        className={fieldClassName}\n          id={1}\n          type=\"text\"\n          value={value}\n          placeholder={label}\n          onChange={this.changeValue.bind(this)}\n          onKeyPress={this.handleKeyPress.bind(this)}\n          onSubmit={this.onSubmit}\n        \n          onFocus={() => !locked && this.setState({ active: true })}\n          onBlur={() => !locked && this.setState({ active: false })}\n          {...this.props}\n        />\n    );\n  }\n}\n\n","import React from 'react'\nimport Button from './Button'\nimport './intro.css'\nimport Input from '../../Components/TextInput/Input'\nimport { Spring } from 'react-spring'\nimport { ParallaxLayer } from 'react-spring/addons'\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null\n    }\n  }\n\n  getVal = (val) => {\n    this.setState({ name: val })\n  }\n\n  handleClick(val) {\n    if (this.state.name) {\n      this.props.onClick()\n      this.props.updateState([this.state.name,val])\n    }\n  }\n\n  render() {\n    return (\n      <ParallaxLayer\n        offset={0}\n        speed={0.1}\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n\n\n        <br />\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'row', flexWrap: 'wrap' }}>\n          <p className=\"title\">Hi, I'm </p>\n          <Input\n            id={1}\n            label=\"your name\"\n            locked={false}\n            active={false}\n            onKeyChange={this.getVal}\n          />\n          <p className=\"title\">I want to...</p>\n        </div>\n\n        <div className=\"options\">\n          <Button onClick={() => this.handleClick(\"sending\")}>\n            send\n          </Button>\n\n          <Button onClick={() => this.handleClick(\"driving\")}>\n            drive\n          </Button>\n        </div>\n\n      </ParallaxLayer>\n    );\n  }\n}","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport Input from '../../Components/TextInput/Input'\n\nexport default class Map extends React.Component {\n    setSpace = (val) => {\n        this.props.onClick()\n        this.props.updateState(val)\n    }\n    \n    render() {\n        \n        return (\n            <ParallaxLayer\n                offset={2}\n                speed={-0}\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                >\n                <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between', flexDirection: 'row' }}>\n                    <p className=\"infoTitle\">\n                        I {this.props.sender ? \"need\" : \"have\"} a\n                    <Input\n                            id={1}\n                            label=\"small, medium, large\"\n                            locked={false}\n                            active={false}\n                            onSubmit={this.setSpace}\n                        />\n                        amount of space</p>\n                </div>\n\n            </ParallaxLayer>\n        );\n    }\n}","import React from 'react';\nimport Input from '../../Components/TextInput/Input'\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: ''};\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    this.setState({address})\n\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng =>     this.props.onChange(latLng))\n      .catch(error => console.error('Error', error));\n  };\n\n  render() {\n    \n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <Input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport Geosuggest from './Places'\nimport './info.css'\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comingFrom: null,\n      goingTo: null\n    }\n  };\n\n  comingFrom = (val) => {\n    this.setState({ comingFrom: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n  goingTo = (val) => {\n    this.setState({ goingTo: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    return (\n      <ParallaxLayer\n        offset={1}\n        speed={0.1}\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm coming from</p>\n          <Geosuggest onChange={this.comingFrom} />\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm going to</p>\n          <Geosuggest onChange={this.goingTo} />\n        </div>\n      </ParallaxLayer>\n    );\n  }\n}","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport Geosuggest from './Places'\nimport './info.css'\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comingFrom: null,\n      goingTo: null\n    }\n  };\n\n  comingFrom = (val) => {\n    this.setState({ comingFrom: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n  goingTo = (val) => {\n    this.setState({ goingTo: val });\n    if (this.state.goingTo && this.state.comingFrom){\n      this.props.updateState([this.state.comingFrom,this.state.goingTo])\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    return (\n      <ParallaxLayer\n        offset={1}\n        speed={0.1}\n        // onClick={() => this.props.onClick()}\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'column' }}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm sending from</p>\n          <Geosuggest onChange={this.comingFrom} />\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n          <p className=\"infoTitle\">I'm going to</p>\n          <Geosuggest onChange={this.goingTo} />\n        </div>\n      </ParallaxLayer>\n    );\n  }\n}","import React from 'react';\nimport moment from 'moment';\nimport Helmet from 'react-helmet';\n\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\n\nimport { formatDate, parseDate } from 'react-day-picker/moment';\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n    this.state = {\n      from: undefined,\n      to: undefined,\n    };\n  }\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    const { to } = this.state;\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n    if (this.state.to){\n        this.props.returnDate([from, { from, to }])\n    }\n\n  }\n  handleToChange(to) {\n    const { from} = this.state;\n\n    this.setState({ to }, this.showFromMonth);\n    if (this.state.from){\n        this.props.returnDate([from, { from, to }])\n    } \n  }\n\n  render() { \n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    return (\n      <div className=\"InputFromTo\">\n        <DayPickerInput\n          value={from}\n          placeholder=\"From\"\n          format=\"LL\"\n          formatDate={formatDate}\n          parseDate={parseDate}\n          dayPickerProps={{\n            selectedDays: [from, { from, to }],\n            disabledDays: { after: to },\n            toMonth: to,\n            modifiers,\n            numberOfMonths: 2,\n            onDayClick: () => this.to.getInput().focus(),\n          }}\n          onDayChange={this.handleFromChange}\n        />{' '}\n        —{' '}\n        <span className=\"InputFromTo-to\">\n          <DayPickerInput\n            ref={el => (this.to = el)}\n            value={to}\n            placeholder=\"To\"\n            format=\"LL\"\n            formatDate={formatDate}\n            parseDate={parseDate}\n            dayPickerProps={{\n              selectedDays: [from, { from, to }],\n              disabledDays: { before: from },\n              modifiers,\n              month: from,\n              fromMonth: from,\n              numberOfMonths: 2,\n            }}\n            onDayChange={this.handleToChange}\n          />\n        </span>\n        <Helmet>\n          <style>{`\n  .InputFromTo .DayPicker-Day--selected:not(.DayPicker-Day--start):not(.DayPicker-Day--end):not(.DayPicker-Day--outside) {\n    background-color: #f0f8ff !important;\n    color: #4a90e2;\n  }\n  .InputFromTo .DayPicker-Day {\n    border-radius: 0 !important;\n  }\n  .InputFromTo .DayPicker-Day--start {\n    border-top-left-radius: 50% !important;\n    border-bottom-left-radius: 50% !important;\n  }\n  .InputFromTo .DayPicker-Day--end {\n    border-top-right-radius: 50% !important;\n    border-bottom-right-radius: 50% !important;\n  }\n  .InputFromTo .DayPickerInput-Overlay {\n    width: 550px;\n  }\n  .InputFromTo-to .DayPickerInput-Overlay {\n    margin-left: -198px;\n  }\n`}</style>\n        </Helmet>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { ParallaxLayer } from 'react-spring/addons'\nimport DayPicker from 'react-day-picker/DayPickerInput'\nimport DayPickerRange from '../../Components/DayPickerRange/DayPickerRange'\nimport 'react-day-picker/lib/style.css';\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date()\n        }\n    };\n    setSpace = (val) => {\n        this.props.updateState(val)\n    }\n    returnDateRange = () => {\n        if (this.props.sender) {\n            return (\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'column' }}>\n                    <p className=\"infoTitle\">Let's send between</p>\n                    <DayPickerRange returnDate={this.setSpace} />\n                </div>\n            )\n        }\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', flexDirection: 'row' }}>\n                <p className=\"infoTitle\">\n                    I'm leaving on\n                </p>\n                <div style={{ marginLeft: 15 }}><DayPicker onDayChange={this.setSpace} /></div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <ParallaxLayer\n                offset={3}\n                speed={-0}\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', flexDirection: 'column' }}>\n\n                {this.returnDateRange()}\n\n            </ParallaxLayer>\n        );\n    }\n}","import React from 'react'\nimport Intro from './Scenes/Intro/Intro'\nimport NumItems from './Scenes/NumItems/NumItems'\nimport UserInfoDriver from './Scenes/Info/UserInfoDriver'\nimport UserInfoSender from './Scenes/Info/UserInfoSender'\nimport DateRange from './Scenes/DateRange/DateRange'\nimport { Parallax, ParallaxLayer } from 'react-spring/addons'\n\n// Little helpers ...\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nexport default class UserFlow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: null,\n            sendOrDrive: null,\n            locations: null,\n            space: null,\n            timeFrame: null\n        }\n    };\n\n    updateUser = (val) => {\n        this.setState({\n            name: val[0],\n            sendOrDrive: val[1],\n        })\n    }\n    updateLocations = (val) => {\n        this.setState({ locations: val })\n    }\n    updateSpace = (val) => {\n        this.setState({ space: val })\n    }\n\n    updateTimeFrame = (val) => {\n        this.setState({ timeFrame: val })\n    }\n\n    returnEverything = () =>{\n        if(this.state.sendOrDrive && this.state.space && this.state.timeFrame && this.state.locations){\n            this.props.onFinished(this.state)\n            return JSON.stringify(this.state)\n        }\n    }\n\n    render() {\n        return (\n            <Parallax ref={ref => (this.parallax = ref)} pages={4}>\n                <ParallaxLayer offset={0} speed={0} factor={3} style={{backgroundColor: '#373c4c',backgroundImage: url('stars', true), backgroundSize: 'cover' }} />\n                <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n                <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#909090' }} />\n                <ParallaxLayer offset={3} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n                <Intro onClick={() => this.parallax.scrollTo(1)} updateState={this.updateUser} />\n                <ParallaxLayer offset={3} speed={1}>\n                {this.returnEverything()}\n                </ParallaxLayer>\n                {this.state.sendOrDrive === 'sending' ? <UserInfoSender onClick={() => this.parallax.scrollTo(2)} updateState={this.updateLocations} /> : <UserInfoDriver onClick={() => this.parallax.scrollTo(2)} updateState={this.updateLocations} />}\n                \n                {this.state.sendOrDrive === 'sending' ? <NumItems onClick={() => this.parallax.scrollTo(3)} updateState={this.updateSpace} sender={true}/> :<NumItems onClick={() => this.parallax.scrollTo(3)} updateState={this.updateSpace} sender={false}/>}\n\n                \n                {/* Earth needs to be behind everything */}\n                <ParallaxLayer offset={3.6} speed={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('earth')} style={{ width: '60%' }} />\n                </ParallaxLayer>\n\n                {this.state.sendOrDrive === 'sending' ? <DateRange sender={true} updateState={this.updateTimeFrame}/> :<DateRange sender={false} updateState={this.updateTimeFrame}/>}\n\n                {/*BACKGROUND IMAGES*/}\n                <ParallaxLayer offset={0.2} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('satellite2')} style={{ width: '15%', marginLeft: '15%' }} />\n                </ParallaxLayer>\n                <ParallaxLayer offset={0.5} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('satellite3')} style={{ width: '15%', marginLeft: '80%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\n                </ParallaxLayer>\n               \n                <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.1, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1} speed={0.2} style={{ opacity: 0.2, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\n                </ParallaxLayer>\n\n                <ParallaxLayer offset={3} speed={0.4} style={{ opacity: 0.4, pointerEvents: 'none' }}>\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\n                    <img alt={\"\"} src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\n                </ParallaxLayer>\n            </Parallax>\n        )\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './success.json'\n \nexport default class LottieControl extends React.PureComponent {\n  render() {\n    const defaultOptions = {\n      autoplay: true, \n      animationData: animationData,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n      }\n    };\n \n    return <Lottie options={defaultOptions}\n              height={500}\n              width={500}\n             />\n    \n  }\n}","import React from 'react'\nimport Animation from './Animation'\nimport './driver.css'\n\n\n// Little helpers ...\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nexport default class DriverSuccess extends React.Component {\n    render() {\n        return (\n            <div style={{\n                width: '100vw',\n                height: '100vh',\n                display: 'flex',\n                flex: 1,\n                alignItems: 'center',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                backgroundColor: '#373c4c',\n                backgroundImage: url('stars', true),\n                backgroundSize: 'cover'\n            }} >\n                <p className=\"driverTitle\">Success!<br/> We'll notify you if there's a match.</p>\n                <Animation/>\n            </div>\n\n        )\n    }\n}\n\n","import React from 'react'\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker,  DirectionsRenderer} from \"react-google-maps\"\n\nexport default class MapWithADirectionsRenderer extends React.Component {\n  render() {\n    return (\n      <div>\n        <MyMapComponent\n          key={this.props.key}\n          isMarkerShown\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{height: `60vh`}}/>}\n          containerElement={<div style={{height: `60vh`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n          direction={this.props.direction}\n          markers={this.props.coordinates}\n        />\n      </div>\n    )\n  }\n}\n\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={8}\n    defaultCenter={{lat: props.direction.lat, lng: props.direction.lng}}\n  >\n    {props.markers ? props.markers.map((coordinates) =>  <Marker position={coordinates}/>) : null}\n\n  </GoogleMap>\n)); ","import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from './car.json'\n \nexport default class LottieControl extends React.PureComponent {\n  render() {\n    const defaultOptions = {\n      autoplay: true, \n      animationData: animationData,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n      }\n    };\n \n    return <Lottie options={defaultOptions}\n              height={300}\n              width={300}\n             />\n    \n  }\n}","import React from 'react'\nimport MapWithADirectionsRenderer from './MapWithADirectionsRenderer'\nimport Animation from './SenderAnimation'\nimport './confirmation.css'\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    render() {\n        console.log(this.props.coordinates)\n        return (\n            <div style={{\n                width: '100vw',\n                height: '100vh',\n                // display: 'flex',\n                // flex: 1,\n                // alignItems: 'center',\n                // flexDirection: 'column',\n                // justifyContent: 'center',\n                backgroundColor: '#373c4c',\n                backgroundImage: url('stars', true),\n                // backgroundSize: 'cover'\n            }} >\n\n                <div style={{\n                    display: 'flex',\n                    flex: 1,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                    paddingLeft: 40,\n                    paddingRight: 40,\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    height: '40vh'\n                }}>\n                 <p className=\"confTitle\">\n                            Thank you {this.props.name}!\n                        </p>\n                    <div style={{\n                        display: 'flex',\n                        flex: 1,\n                        flexDirection: 'column',\n                        justifyContent: 'space-around',\n                        alignItems: 'flex-start',\n                        marginLeft: 20\n                    }}>\n                   \n                        <p className=\"confTitle\">\n                            Your Driver: {this.props.driver}\n                        </p>\n                        <p className=\"confTitle\">\n                            Price: {this.props.price}\n                        </p>\n\n                    </div>\n                    <Animation/>\n                </div>\n                <MapWithADirectionsRenderer\n                    direction={this.props.coordinates[0]}\n                    coordinates={this.props.coordinates}\n                />\n\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserFlow from './Userflow'\nimport {handleForm} from './Logic/app'\nimport * as serviceWorker from './serviceWorker';\nimport DriverSuccess from './Scenes/DriverSuccess/DriverSuccess';\nimport SenderConfirmation from './Scenes/SenderConfirmation/SenderConfirmation'\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            sendOrDrive: null,\n            finishedForm: false\n        }\n    };\n    changeFlow = (val) => {\n        val.sendOrDrive === 'sending' ? this.setState({sendOrDrive: true,finishedForm: val}) : this.setState({sendOrDrive: false,finishedForm: true})\n    }\n\n    addSender = () => {\n        if (this.state.finishedForm){\n            var info = handleForm(this.state.finishedForm);\n        }\n    }\n\n    render(){\n        if (this.state.finishedForm){\n            return this.state.sendOrDrive ? <SenderConfirmation name={this.state.finishedForm.name}coordinates={this.state.finishedForm.locations}/> : <DriverSuccess/>\n        }\n        return <UserFlow onFinished={this.changeFlow.bind(this)}/>\n    }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}